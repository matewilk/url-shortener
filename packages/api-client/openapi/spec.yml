openapi: 3.0.3
info:
  title: Shortify API
  description: API for shortening URLs
  version: 1.0.0


components:
  schemas:
    Url:
      type: string
      description: The URL to shorten
      format: uri
      example: https://www.example.com
    ShortUrl:
      type: object
      properties:
        shortUrl:
          type: string
          description: The shortened URL
          format: uri
          example: https://shortify.com/abc123
      

paths:
  /shorten:
    post:
      summary: Shorten a URL
      description: Shorten a long URL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                "url":
                  $ref: '#/components/schemas/Url'
      
      responses:
        '200':
          description: URL shortened successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortUrl'
        
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Valid URL is required
  
  /{shortUrl}:
    get:
      summary: Redirect to the original URLs
      description: Redirect to the original URL based on the short URL
      parameters:
        - name: shortUrl
          in: path
          required: true
          description: Encoded short URL
          schema:
            type: string
            example: abc123
      responses:
        '200':
          description: Return short URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    $ref: '#/components/schemas/Url'
        '302':
          description: Redirect to the original URL
          headers:
            Location:
              schema:
                type: string
                format: uri
                example: https://www.example.com
        '404':
          description: Short URL not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Short URL not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Internal server error
        
  /users:
    post:
      summary: Create a new user
      description: Create a new user in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                username:
                  type: string
                  description: The name of the user
                  example: johndoe
                email:
                  type: string
                  description: The email of the user
                  example: example@email.com
                password:
                  type: string
                  description: The password of the user
                  format: password
                  example: password123
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: User created successfully
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: Internal server error

  /login:
    post:
      summary: User login
      description: Authenticate a user and return a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                username:
                  type: string
                  description: The name of the user
                  example: johndoe
                password:
                  type: string
                  description: The password of the user
                  format: password
                  example: password123
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  kind:
                    type: string
                    enum: [success | error]
                    example: success
                  token:
                    type: string
                    description: JWT token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: Internal server error
  /users/id/{id}:
    get:
      summary: Find user by ID
      description: Retrieve user information by their ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to retrieve
          schema:
            type: string
            example: 12345
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - user
                properties:
                  user:  
                    type: object
                    required:
                      - id
                      - name
                      - email
                    properties:
                      id:
                        type: string
                        description: The ID of the user
                        example: 12345
                      name:
                        type: string
                        description: The name of the user
                        example: johndoe
                      email:
                        type: string
                        description: The email of the user
                        example: johndoe@email.com