/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/shorten": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Shorten a URL
         * @description Shorten a long URL
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        url: components["schemas"]["Url"];
                    };
                };
            };
            responses: {
                /** @description URL shortened successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ShortUrl"];
                    };
                };
                /** @description Bad request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Valid URL is required
                             */
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{shortUrl}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Redirect to the original URLs
         * @description Redirect to the original URL based on the short URL
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Encoded short URL */
                    shortUrl: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Return short URL */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            url?: components["schemas"]["Url"];
                        };
                    };
                };
                /** @description Redirect to the original URL */
                302: {
                    headers: {
                        Location?: string;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Short URL not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Short URL not found
                             */
                            message?: string;
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Internal server error
                             */
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/urls": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all URLs
         * @description Retrieve all shortened URLs for the authenticated user
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of shortened URLs */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            urls: {
                                /**
                                 * @description The ID of the shortened URL
                                 * @example 12345
                                 */
                                id: string;
                                /**
                                 * Format: uri
                                 * @description The original URL
                                 * @example https://www.example.com
                                 */
                                url: string;
                                /**
                                 * @description The hash of the shortened URL
                                 * @example abc123
                                 */
                                hash: string;
                                /**
                                 * Format: date-time
                                 * @description The date and time when the URL was created
                                 * @example 2023-10-01T12:00:00Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description The date and time when the URL will expire
                                 * @example 2023-12-01T12:00:00Z
                                 */
                                expiredAt: string;
                                /**
                                 * Format: date-time
                                 * @description The date and time when the URL was disabled
                                 * @example 2023-10-01T12:00:00Z
                                 */
                                disabledAt: string;
                            }[];
                        };
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Unauthorized access
                             */
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new user
         * @description Create a new user in the system
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description The name of the user
                         * @example johndoe
                         */
                        username?: string;
                        /**
                         * @description The email of the user
                         * @example example@email.com
                         */
                        email: string;
                        /**
                         * Format: password
                         * @description The password of the user
                         * @example password123
                         */
                        password: string;
                    };
                };
            };
            responses: {
                /** @description User created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Success message
                             * @example User created successfully
                             */
                            message?: string;
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Internal server error
                             */
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * User login
         * @description Authenticate a user and return a token
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description The name of the user
                         * @example johndoe
                         */
                        username?: string;
                        /**
                         * Format: password
                         * @description The password of the user
                         * @example password123
                         */
                        password: string;
                    };
                };
            };
            responses: {
                /** @description User logged in successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @example success
                             * @enum {string}
                             */
                            kind?: "success | error";
                            /**
                             * @description JWT token
                             * @example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                             */
                            token?: string;
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Internal server error
                             */
                            error?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/id/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find user by ID
         * @description Retrieve user information by their ID
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description The ID of the user to retrieve */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description User found successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            user: {
                                /**
                                 * @description The ID of the user
                                 * @example 12345
                                 */
                                id: string;
                                /**
                                 * @description The name of the user
                                 * @example johndoe
                                 */
                                name: string;
                                /**
                                 * @description The email of the user
                                 * @example johndoe@email.com
                                 */
                                email: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Format: uri
         * @description The URL to shorten
         * @example https://www.example.com
         */
        Url: string;
        ShortUrl: {
            /**
             * Format: uri
             * @description The shortened URL
             * @example https://shortify.com/abc123
             */
            shortUrl?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
